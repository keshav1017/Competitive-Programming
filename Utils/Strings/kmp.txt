void construct(string &pat, vector<int>& lps){
    int len = 0;
    lps[0] = 0;

    int i = 1;
    while(i < pat.size()){
        if(pat[i] == pat[len]){
            len++;
            lps[i] = len;
            i++;
        }
        else{
            if(len > 0){
                len = lps[len-1];
            }
            else{
                lps[i] = 0;
                i++;
            }
        }
    }
}

void kmp(string& text, string& pat){

    int n = text.size();
    int m = pat.size();

    vector<int> lps(m);
    construct(pat, lps);

    int i = 0, j = 0;
    int ans = 0;

    while(i < n){
        if(text[i] == pat[j]){
            i++, j++;

            if(j == m){
                ans++;
                j = lps[j-1];
            }
        }

        else{
            if(j > 0){
                j = lps[j-1];
            }
            else{
                i++;
            }
        }
    }

    cout << ans << "\n";
}